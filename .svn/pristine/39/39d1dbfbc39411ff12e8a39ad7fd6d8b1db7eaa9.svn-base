<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.scmStandard.dao.UserInfoDao">

	<!-- 고객정보 목록 조회 -->
	<select id="listUserInfo" resultType="kr.happyjob.study.scmStandard.model.UserInfoModel">
		
		SELECT		
				user_Type
			,	client
			, 	clientnm
			,	mgrnm
			,	phone
			,	loginID
			
		FROM	tb_userinfo
		<where>
			user_Type != 'F'
			<if test="(sname != null) and (!sname.equals(''))">
				<choose>
					<when
						test="oname eq 'user_Type'.toString()">
						and user_Type Like CONCAT('%', #{uname}, '%')
					</when>
					<when
						test="oname eq 'name'.toString()">
						and mgrnm LIKE CONCAT('%', #{sname}, '%')
						and user_Type = 'C'
					</when>
					<when
						test="oname eq 'clientnm'.toString()">
						and clientnm LIKE CONCAT('%', #{sname}, '%')
						and user_Type != 'C'
					</when>
					<otherwise>
						AND 1=2
					</otherwise>
				</choose>
			</if>
		</where>
		
		ORDER BY user_Type
		LIMIT #{pageIndex}, #{pageSize}		
		
	</select>
	
	<!-- 고객정보 목록 총 갯수 조회 -->
	<select id="countListUserInfo" resultType="int">

		SELECT COUNT(1) AS tot_userCnt
		
		FROM tb_userinfo
		<where>
			user_Type != 'F'
			<if test="(sname != null) and (!sname.equals(''))">
				<choose>
					<when
						test="oname eq 'user_Type'.toString()">
						and user_Type Like CONCAT('%', #{uname}, '%')
					</when>
					<when
						test="oname eq 'name'.toString()">
						and mgrnm LIKE CONCAT('%', #{sname}, '%')
						and user_Type = 'C'
					</when>
					<when
						test="oname eq 'clientnm'.toString()">
						and clientnm LIKE CONCAT('%', #{sname}, '%')
						and user_Type != 'C'
					</when>
					<otherwise>
						AND 1=2
					</otherwise>
				</choose>
			</if>
		</where>
	</select>
	
	<!-- 고객정보 단건 조회 -->
	<select id="selectUserInfo" resultType="kr.happyjob.study.scmStandard.model.UserInfoModel">
		SELECT	loginID
			,	password
			,	client
			,	clientnm
			,	mgrnm
			,	phone
			,	email
            ,   user_Type
            ,   zipCode
            ,   address
            ,   dtAddress
		FROM	tb_userinfo
		WHERE	loginID = #{loginID}
	</select>
	
	
	<!-- 그룹코드 저장 -->
	<insert id="insertUserInfo">
		
		INSERT INTO tb_userinfo
		(
				loginID, password, client, clientnm, mgrnm, user_Type, phone, email, zipCode, address, dtAddress, regDate, comp_id
		)
		VALUES
		(
				#{loginID}
			,	#{password}
			,	#{client}
			,   #{clientnm}
			,   #{mgrnm}
			,   #{workSearchInsert}
			,   #{phone}
			,   #{email}
			,   #{zipCode}
			,   #{address}
			,   #{dtAddress}
			,   NOW()
			,	0
			
		)		
	</insert>
	
	<!-- 고객정보 수정 -->
	<update id="updateUserInfo">
		UPDATE tb_userinfo 
		SET
				password = #{password}
			,   client = #{client}
			,   clientnm = #{clientnm}
			,   mgrnm = #{mgrnm}
			,   user_Type = #{workSearchInsert}
			,   phone = #{phone}
			,   email = #{email}
			,   client = #{client}
			,   zipCode = #{zipCode}
			,   address = #{address}
			,   dtAddress = #{dtAddress}
			,   upID = #{fnl_mdfr_sst_id}
<!-- 			,	upDate = NOW() -->
		WHERE	loginID = #{loginID};
	</update>
	
	
	<!-- 고객정보 삭제 -->
	<delete id="deleteUserInfo">
		DELETE FROM tb_userinfo WHERE loginID = #{loginID}
	</delete>
	
	
</mapper>